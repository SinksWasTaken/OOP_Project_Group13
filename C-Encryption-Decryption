import java.util.Scanner;

public class C-Encryption-Decryption{

    public static void main(String[] args) 
    {
        Scanner input  = new Scanner(System.in);
        C_submenu(input);
        
    }

    private static void Clear_Console()
    {
        System.out.print("\033[H\033[2J");  
        System.out.flush(); 
    }

    private static void C_submenu(Scanner input)
    {
       
        boolean exit = false;

        System.out.println("Please Select One of The Following Options From The Submenu: ");
        System.out.println("[1] Encryption");
        System.out.println("[2] Decryption");
        System.out.println("[3] Return to the Main Menu\n");

        

        while(!exit)
        {
            System.out.println("Please Select One of The Following Options From The Submenu: ");
            System.out.println("[1] Encryption");
            System.out.println("[2] Decryption");
            System.out.println("[3] Return to the Main Menu\n");
            
            switch (input.nextInt()) 
            {

                case 1:
                    Clear_Console();  
                    System.out.println("You have selected option 1\n");        
                    System.out.println("Please Enter The Encryption Key to Use (Must be between 26 And -26),\nPostive Values Shift Characters to The Right, Negative Values Shift Characters to The Left, 0 Will Not Shift Characters: ");     
                    
                    int key = input.nextInt();
                    input.nextLine(); 
                    
                    if (key > 26 || key < -26){
                        System.out.println("\nINVALID INPUT!!!, The Encryption Key Must Be Be Between 26 And -26\nReturning To the subMenu...\n ");
                        break;
    
                    }
    
                    System.out.println("\nPlease Enter the Text You Would Like to Encrypt: ");     
                    String text = input.nextLine();
    
                    String Encrypted_Text = Encrypt(text, key);
                    System.out.println("\n"+ text + " Was Successfully Encrypted To " + Encrypted_Text);
                    break;
               
                case 2:
                    Clear_Console();  
                    System.out.println("You have selected option 2\n");               
                    System.out.println("Please Enter The Decryption Key to Use (Must be between 26 And -26)\nPostive Values Shift Characters The Left, Negative Values Shift Characters to The Right, 0 Will Not Shift Characters: ");       
                    
                    key = input.nextInt();
                    input.nextLine(); 
    
                    if (key > 26 || key < -26){
                        System.out.println("\nINVALID INPUT!!!, The Decryption Key Must Be Be Between 26 And -26\nReturning To the Submenu...\n ");
                        break;
                    }
                    
                    System.out.println("\nPlease Enter the Text You Would Like to Decrypt: ");       
                    text = input.nextLine();
    
                    String Decrypted_Text = Decrypt(text, key);
                    System.out.println("\n"+ text + " Was Successfully Dencrypted To " + Decrypted_Text);
                    
                    break;
    
                case 3:                     
                    Clear_Console();  
                    exit=true;
                    break;
                 
                default:
                    System.out.println("INVALID INPUT!!!, No Such Option Exists, Please Select A valid option From The Submenu (1, 2, 3)\n");
                    break;
            }   
        }

    }

        private static String Encrypt(String text, int key){

        String ans = "";      
        for (int i = 0; i < text.length(); i++) {
            
            if(Character.isAlphabetic(text.charAt(i)))
            {
                char c = (char)(text.charAt(i)-'a');

                char c_Encrypted = (char)(((c+key)+26)%26);

                c_Encrypted = (char) (c_Encrypted%26 + 'a');

                System.out.print("\nAfter: " + c_Encrypted);
                
                ans += c_Encrypted;
            }
            else if(!Character.isAlphabetic(text.charAt(i)))
            {
                ans += text.charAt(i);
            }
        }

        return ans;
    }

        private static String Decrypt(String text, int key){
        
        String ans = "";     
        for (int i = 0; i < text.length(); i++) {
            
            if(Character.isAlphabetic(text.charAt(i)))
            {
                char c = (char)(text.charAt(i)-'a');

                char c_Decrypted = (char)(((c-key)+26)%26);
 
                //System.out.print("Before: " + ((c-key)+26)%26);
                //System.out.print("\nBefore: " + c_Decrypted);

                c_Decrypted = (char) (c_Decrypted + 'a');

                //System.out.print("\nAfter: " + c_Decrypted);

                ans += c_Decrypted;
            }
            else if(!Character.isAlphabetic(text.charAt(i)))
            {
                ans += text.charAt(i);
            }
        }

        return ans;
    }
}
